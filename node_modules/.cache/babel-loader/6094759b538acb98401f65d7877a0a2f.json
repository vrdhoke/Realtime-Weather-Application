{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavdhoke/weather-app/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from \"./app_component/weather.component\";\nimport Route from 'react-router-dom/Route';\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\"; // const routes = [\n//   {\n//     path: \"/Day1\",\n//     component: Day1\n//   },\n//   {\n//     path: \"/Day2\",\n//     component: Day2,\n//   },\n//   {\n//     path: \"/Day3\",\n//     component: Day3,\n//   },\n//   {\n//     path: \"/Day4\",\n//     component: Day4,\n//   },\n//   {\n//     path: \"/Day5\",\n//     component: Day5,\n//   }\n// ];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      console.log(response.list.length);\n      const items = response.list.slice(0, 7);\n      console.log(items);\n      this.setState({\n        city: response.city.name,\n        country: response.city.country\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) // <div className=\"App\">\n    // <Weather city={this.state.city} \n    // country={this.state.country} \n    // temp_celius={this.state.celcius}\n    // temp_max={this.state.temp_max}\n    // temp_min={this.state.temp_min}\n    // description={this.state.description}\n    // />\n    // </div>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vaibhavdhoke/weather-app/src/App.js"],"names":["React","BrowserRouter","Router","Weather","Route","API_key","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","list","length","items","slice","setState","city","name","country","state","undefined","icon","main","celcius","temp_max","temp_min","description","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAuC,kBAAvC;AAEA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAqB,mCAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,OAAO,GAAG,kCAAhB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAE;AACX;;AADW,SAgBbC,UAhBa,GAgBA,YAAU;AAErB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,6EAC2CN,OAD3C,EAA5B;AAIA,YAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,MAA1B;AACA,YAAMC,KAAK,GAAGN,QAAQ,CAACI,IAAT,CAAcG,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAd;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AAKA,WAAKE,QAAL,CAAc;AACZC,QAAAA,IAAI,EAACT,QAAQ,CAACS,IAAT,CAAcC,IADP;AAEZC,QAAAA,OAAO,EAACX,QAAQ,CAACS,IAAT,CAAcE;AAFV,OAAd;AAKD,KArCY;;AAEX,SAAKC,KAAL,GAAW;AACTH,MAAAA,IAAI,EAACI,SADI;AAETF,MAAAA,OAAO,EAACE,SAFC;AAGTC,MAAAA,IAAI,EAACD,SAHI;AAITE,MAAAA,IAAI,EAACF,SAJI;AAKTG,MAAAA,OAAO,EAACH,SALC;AAMTI,MAAAA,QAAQ,EAACJ,SANA;AAOTK,MAAAA,QAAQ,EAACL,SAPA;AAQTM,MAAAA,WAAW,EAAC,EARH;AASTC,MAAAA,KAAK,EAAC;AATG,KAAX;AAWA,SAAKvB,UAAL;AACD;;AAyBDwB,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CASE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF;AAmBD;;AA5D8B;;AA+DjC,eAAe3B,GAAf","sourcesContent":["import React from 'react';\nimport {BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from  \"./app_component/weather.component\";\nimport Route from 'react-router-dom/Route'\n\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\";\n\n\n// const routes = [\n//   {\n//     path: \"/Day1\",\n//     component: Day1\n//   },\n//   {\n//     path: \"/Day2\",\n//     component: Day2,\n//   },\n//   {\n//     path: \"/Day3\",\n//     component: Day3,\n//   },\n//   {\n//     path: \"/Day4\",\n//     component: Day4,\n//   },\n//   {\n//     path: \"/Day5\",\n//     component: Day5,\n//   }\n// ];\n\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celcius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    this.getWeather();\n  }\n\n  getWeather = async() =>{\n\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=${API_key}`\n    );\n\n    const response = await api_call.json();\n\n    console.log(response);\n    console.log(response.list.length);\n    const items = response.list.slice(0,7);\n    console.log(items);\n\n\n\n\n    this.setState({\n      city:response.city.name,\n      country:response.city.country\n      \n    })\n  };\n\n  render(){\n    return(\n      <Router>\n        \n      </Router>  \n\n\n\n\n\n      // <div className=\"App\">\n      // <Weather city={this.state.city} \n      // country={this.state.country} \n      // temp_celius={this.state.celcius}\n      // temp_max={this.state.temp_max}\n      // temp_min={this.state.temp_min}\n      // description={this.state.description}\n      // />\n      // </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}