{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavdhoke/weather-app/src/App.js\";\nimport React from 'react';\nimport { Route, BrowserRouter as Router, Link, NavLink } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from \"./app_component/weather.component\";\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\"; // const routes = [\n//   {\n//     path: \"/Day1\",\n//     component: Day1\n//   },\n//   {\n//     path: \"/Day2\",\n//     component: Day2,\n//   },\n//   {\n//     path: \"/Day3\",\n//     component: Day3,\n//   },\n//   {\n//     path: \"/Day4\",\n//     component: Day4,\n//   },\n//   {\n//     path: \"/Day5\",\n//     component: Day5,\n//   }\n// ];\n\nconst Day1 = ({\n  id\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" Day1 Forecast\"), id.map(function (i, index) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, i.dt_txt, \",\", i.main.temp);\n  }));\n};\n\nconst Day2 = ({\n  id\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" Day2 Forecast\"), id.map(function (i, index) {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, i.dt_txt, \",\", i.main.temp);\n  }));\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      console.log(response.list.length);\n      const items = response.list.slice(0, 7);\n      console.log(items.length);\n      this.setState({\n        city: response.city.name,\n        country: response.city.country,\n        items: response.list.slice(0, 7)\n      });\n    };\n\n    this.state = {\n      items: [],\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    }; //this.getWeather();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.items.length), React.createElement(Route, {\n      path: \"/day1\",\n      exact: true,\n      strict: true,\n      render: props => React.createElement(Day1, {\n        id: this.state.items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))) // <div className=\"App\">\n    // <Weather city={this.state.city} \n    // country={this.state.country} \n    // temp_celius={this.state.celcius}\n    // temp_max={this.state.temp_max}\n    // temp_min={this.state.temp_min}\n    // description={this.state.description}\n    // />\n    // </div>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vaibhavdhoke/weather-app/src/App.js"],"names":["React","Route","BrowserRouter","Router","Link","NavLink","Weather","API_key","Day1","id","map","i","index","dt_txt","main","temp","Day2","App","Component","constructor","componentDidMount","api_call","fetch","response","json","console","log","list","length","items","slice","setState","city","name","country","state","undefined","icon","celcius","temp_max","temp_min","description","error","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Route,BrowserRouter as Router,Link,NavLink } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from  \"./app_component/weather.component\";\n\n\n\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\";\n\n\n// const routes = [\n//   {\n//     path: \"/Day1\",\n//     component: Day1\n//   },\n//   {\n//     path: \"/Day2\",\n//     component: Day2,\n//   },\n//   {\n//     path: \"/Day3\",\n//     component: Day3,\n//   },\n//   {\n//     path: \"/Day4\",\n//     component: Day4,\n//   },\n//   {\n//     path: \"/Day5\",\n//     component: Day5,\n//   }\n// ];\n\nconst Day1 = ({id}) => {\n    return(\n      <div>\n      <h1> Day1 Forecast</h1>\n      \n      {id.map(function(i,index) {\n          return <h1>{i.dt_txt},{i.main.temp}</h1>        \n      })}\n      </div>\n    );\n}\n\nconst Day2 = ({id}) => {\n  return(\n    <div>\n    <h1> Day2 Forecast</h1>\n    \n    {id.map(function(i,index) {\n        return <h1>{i.dt_txt},{i.main.temp}</h1>        \n    })}\n    </div>\n  );\n}\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      items:[],\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celcius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    //this.getWeather();\n  }\n\n  componentDidMount = async() =>{\n\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=${API_key}`\n    );\n\n    const response = await api_call.json();\n\n    console.log(response);\n    console.log(response.list.length);\n    const items = response.list.slice(0,7);\n    console.log(items.length);\n\n\n\n\n    this.setState({\n      city:response.city.name,\n      country:response.city.country,\n      items:response.list.slice(0,7)\n    })\n  };\n\n  render(){\n    return(\n      \n\n      <Router>\n        <div className=\"App\">\n          <h1>{this.state.items.length}</h1>\n          <Route path=\"/day1\" exact strict render={(props)=><Day1 id={this.state.items}/>}/>\n        </div>  \n      </Router>  \n\n\n\n\n\n      // <div className=\"App\">\n      // <Weather city={this.state.city} \n      // country={this.state.country} \n      // temp_celius={this.state.celcius}\n      // temp_max={this.state.temp_max}\n      // temp_min={this.state.temp_min}\n      // description={this.state.description}\n      // />\n      // </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}