{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavdhoke/weather-app/src/App.js\";\nimport React from 'react';\nimport { Route, BrowserRouter as Router, Link, NavLink } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from \"./app_component/weather.component\";\n\nvar moment = require('moment');\n\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\"; // const routes = [\n//   {\n//     path: \"/Day1\",\n//     component: Day1\n//   },\n//   {\n//     path: \"/Day2\",\n//     component: Day2,\n//   },\n//   {\n//     path: \"/Day3\",\n//     component: Day3,\n//   },\n//   {\n//     path: \"/Day4\",\n//     component: Day4,\n//   },\n//   {\n//     path: \"/Day5\",\n//     component: Day5,\n//   }\n// ];\n\nconst Day1 = ({\n  id\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Day1 Forecast\"), id.map(function (i, index) {\n    let newDate = new Date();\n    const weekday = i.dt * 1000;\n    newDate.setTime(weekday);\n    const imgURL = \"owf owf-\".concat(i.weather[0].id, \" owf-5x\");\n    return React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, moment(newDate).format('dddd')), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, moment(newDate).format('MMMM Do, h:mm a')), React.createElement(\"i\", {\n      className: imgURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, Math.round(i.main.temp), \" \\xB0F\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, i.weather[0].description)))); //<h1>{i.dt_txt},{i.main.temp}</h1>        \n  }));\n};\n\nconst Day2 = ({\n  id\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \" Day2 Forecast\"), id.map(function (i, index) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, i.dt_txt, \",\", i.main.temp, \",\", i.weather[0].description), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, i.weather[0].description)));\n  }));\n};\n\nconst MainCard = ({\n  id,\n  day\n}) => {\n  let newDate = new Date();\n  const first = id.slice(0, 1);\n  console.log(first); //console.log(id.length);\n  //console.log(first.main.humidity);\n  // const weekday = id.dt * 1000;\n  // newDate.setTime(weekday);   \n  // //const imgURL = `owf owf-${id.weather[0].id} owf-5x`\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, first.map(function (i, index) {\n    let newDate = new Date();\n    const weekday = i.dt * 1000;\n    newDate.setTime(weekday);\n    const imgURL = \"owf owf-\".concat(i.weather[0].id, \" owf-5x\");\n    return React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, day), React.createElement(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, moment(newDate).format('dddd')), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, moment(newDate).format('MMMM Do, h:mm a')), React.createElement(\"i\", {\n      className: imgURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, Math.round(i.main.temp), \" \\xB0F\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, i.weather[0].description)))); //<h1>{i.dt_txt},{i.main.temp}</h1>        \n  }));\n};\n\nconst WeatherDetailsCard = id => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \" Day1 Forecast1\"), id.map(function (i, index) {\n    let newDate = new Date();\n    const weekday = i.dt * 1000;\n    newDate.setTime(weekday);\n    const imgURL = \"owf owf-\".concat(i.weather[0].id, \" owf-5x\");\n    return React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, moment(newDate).format('dddd')), React.createElement(\"p\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, moment(newDate).format('MMMM Do, h:mm a')), React.createElement(\"i\", {\n      className: imgURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, Math.round(i.main.temp), \" \\xB0F\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, i.weather[0].description)))); //<h1>{i.dt_txt},{i.main.temp}</h1>        \n  }));\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      console.log(response.list.length); // const items = response.list.slice(0,7);\n      // console.log(items.length);\n\n      this.setState({\n        city: response.city.name,\n        country: response.city.country,\n        items1: response.list.slice(0, 7),\n        items2: response.list.slice(8, 15),\n        items3: response.list.slice(16, 23),\n        items4: response.list.slice(24, 31),\n        items5: response.list.slice(32, 39)\n      });\n    };\n\n    this.state = {\n      items1: [],\n      items2: [],\n      items3: [],\n      items4: [],\n      items5: [],\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-1 jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"5-Day Forecast.\"), React.createElement(\"h5\", {\n      className: \"display-5 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"New York, US\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/day1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(MainCard, {\n      id: this.state.items1,\n      day: \"Day 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/day2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(MainCard, {\n      id: this.state.items2,\n      day: \"Day 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/day3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(MainCard, {\n      id: this.state.items3,\n      day: \"Day 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/day4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(MainCard, {\n      id: this.state.items4,\n      day: \"Day 4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(Link, {\n      to: \"/day5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(MainCard, {\n      id: this.state.items5,\n      day: \"Day 5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/day1\",\n      exact: true,\n      strict: true,\n      render: props => React.createElement(Day1, {\n        id: this.state.items1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/day2\",\n      exact: true,\n      strict: true,\n      render: props => React.createElement(Day2, {\n        id: this.state.items2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))))) // <div className=\"App\">\n    // <Weather city={this.state.city} \n    // country={this.state.country} \n    // temp_celius={this.state.celcius}\n    // temp_max={this.state.temp_max}\n    // temp_min={this.state.temp_min}\n    // description={this.state.description}\n    // />\n    // </div>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vaibhavdhoke/weather-app/src/App.js"],"names":["React","Route","BrowserRouter","Router","Link","NavLink","Weather","moment","require","API_key","Day1","id","map","i","index","newDate","Date","weekday","dt","setTime","imgURL","weather","format","Math","round","main","temp","description","Day2","dt_txt","MainCard","day","first","slice","console","log","WeatherDetailsCard","App","Component","constructor","props","getWeather","api_call","fetch","response","json","list","length","setState","city","name","country","items1","items2","items3","items4","items5","state","undefined","icon","celcius","temp_max","temp_min","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Route,BrowserRouter as Router,Link,NavLink } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from  \"./app_component/weather.component\";\n\n\nvar moment = require('moment');\n\n\n\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\";\n\n\n\n// const routes = [\n//   {\n//     path: \"/Day1\",\n//     component: Day1\n//   },\n//   {\n//     path: \"/Day2\",\n//     component: Day2,\n//   },\n//   {\n//     path: \"/Day3\",\n//     component: Day3,\n//   },\n//   {\n//     path: \"/Day4\",\n//     component: Day4,\n//   },\n//   {\n//     path: \"/Day5\",\n//     component: Day5,\n//   }\n// ];\n\nconst Day1 = ({id}) => {\n  \n  \n  return(\n      <div>\n      <h1> Day1 Forecast</h1>\n      \n      {id.map(function(i,index) {\n      let newDate = new Date();\n      const weekday = i.dt * 1000\n      newDate.setTime(weekday)      \n      const imgURL = `owf owf-${i.weather[0].id} owf-5x`\n      return (\n      <div className=\"col-sm-2\">\n      <div className=\"card in\">\n        <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\n        <p className=\"text-muted\">{moment(newDate).format('MMMM Do, h:mm a')}</p>\n        <i className={imgURL}></i>\n        <h2>{Math.round(i.main.temp)} °F</h2>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{i.weather[0].description}</p>\n        </div>\n      </div>\n      </div>)\n          //<h1>{i.dt_txt},{i.main.temp}</h1>        \n      })}\n      </div>\n    );\n}\n\nconst Day2 = ({id}) => {\n  return(\n    <div>\n    <h1> Day2 Forecast</h1>\n    \n    {id.map(function(i,index) {\n        return <div><h1>{i.dt_txt},{i.main.temp},{i.weather[0].description}</h1> \n        <div className=\"card-body\">\n          <p className=\"card-text\">{i.weather[0].description}</p>\n        </div></div>       \n    })}\n    \n    </div>\n  );\n}\n\nconst MainCard = ({id,day}) =>{\n  let newDate = new Date();\n\n  const first = id.slice(0,1);\n  console.log(first);\n  \n\n  //console.log(id.length);\n  //console.log(first.main.humidity);\n  // const weekday = id.dt * 1000;\n  // newDate.setTime(weekday);   \n  // //const imgURL = `owf owf-${id.weather[0].id} owf-5x`\n  return(\n    <div>\n    {first.map(function(i,index) {\n    let newDate = new Date();\n    const weekday = i.dt * 1000\n    newDate.setTime(weekday)      \n    const imgURL = `owf owf-${i.weather[0].id} owf-5x`\n    return (\n    <div className=\"col-sm-2\">\n    <div className=\"card in\" >\n      <h4 className=\"card-title\">{day}</h4>\n      <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\n      <p className=\"text-muted\">{moment(newDate).format('MMMM Do, h:mm a')}</p>\n      <i className={imgURL}></i>\n      <h2>{Math.round(i.main.temp)} °F</h2>\n      <div className=\"card-body\">\n        <p className=\"card-text\">{i.weather[0].description}</p>\n      </div>\n    </div>\n    </div>)\n        //<h1>{i.dt_txt},{i.main.temp}</h1>        \n    })}\n    </div>\n  );\n}\n\n\nconst WeatherDetailsCard = (id) =>{\n  return(\n    <div>\n      <h1> Day1 Forecast1</h1>\n      {id.map(function(i,index) {\n      let newDate = new Date();\n      const weekday = i.dt * 1000\n      newDate.setTime(weekday)      \n      const imgURL = `owf owf-${i.weather[0].id} owf-5x`\n      return (\n      <div className=\"col-sm-2\">\n      <div className=\"card\">\n        <h3 className=\"card-title\">{moment(newDate).format('dddd')}</h3>\n        <p className=\"text-muted\">{moment(newDate).format('MMMM Do, h:mm a')}</p>\n        <i className={imgURL}></i>\n        <h2>{Math.round(i.main.temp)} °F</h2>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{i.weather[0].description}</p>\n        </div>\n      </div>\n      </div>)\n          //<h1>{i.dt_txt},{i.main.temp}</h1>        \n      })}\n      </div>\n  );\n}\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      items1:[],\n      items2:[],\n      items3:[],\n      items4:[],\n      items5:[],\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celcius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    this.getWeather();\n  }\n\n  getWeather = async() =>{\n\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=${API_key}`\n    );\n\n    const response = await api_call.json();\n\n    console.log(response);\n    console.log(response.list.length);\n    // const items = response.list.slice(0,7);\n    // console.log(items.length);\n\n    this.setState({\n      city:response.city.name,\n      country:response.city.country,\n      items1:response.list.slice(0,7),\n      items2:response.list.slice(8,15),\n      items3:response.list.slice(16,23),\n      items4:response.list.slice(24,31),\n      items5:response.list.slice(32,39)\n    })\n  };\n\n\n  render(){\n    return(\n      \n\n      <Router >\n        <div className=\"App\">   \n        <h1 className=\"display-1 jumbotron\">5-Day Forecast.</h1>\n        <h5 className=\"display-5 text-muted\">New York, US</h5>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n          <Link to=\"/day1\"><MainCard id={this.state.items1} day ={\"Day 1\"}/></Link>\n          <Link to=\"/day2\"><MainCard id={this.state.items2} day ={\"Day 2\"}/></Link>\n          <Link to=\"/day3\"><MainCard id={this.state.items3} day ={\"Day 3\"}/></Link>\n          <Link to=\"/day4\"><MainCard id={this.state.items4} day ={\"Day 4\"}/></Link>\n          <Link to=\"/day5\"><MainCard id={this.state.items5} day ={\"Day 5\"}/></Link>\n          \n          <Route path=\"/day1\" exact strict render={(props)=><Day1 id={this.state.items1}/>}/>\n          <Route path=\"/day2\" exact strict render={(props)=><Day2 id={this.state.items2}/>}/>\n          </div>\n        </div>  \n        </div>  \n      </Router>  \n\n      // <div className=\"App\">\n      // <Weather city={this.state.city} \n      // country={this.state.country} \n      // temp_celius={this.state.celcius}\n      // temp_max={this.state.temp_max}\n      // temp_min={this.state.temp_min}\n      // description={this.state.description}\n      // />\n      // </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}