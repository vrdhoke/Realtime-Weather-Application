{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavdhoke/weather-app/src/App.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from \"./app_component/weather.component\";\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\";\nconst routes = [{\n  path: \"/Day1\",\n  component: Day1\n}, {\n  path: \"/Day2\",\n  component: Day2\n}, {\n  path: \"/Day3\",\n  component: Day3\n}, {\n  path: \"/Day4\",\n  component: Day4\n}, {\n  path: \"/Day5\",\n  component: Day5\n}];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.city.name,\n        country: response.city.country\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celius: this.state.celcius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vaibhavdhoke/weather-app/src/App.js"],"names":["React","Weather","API_key","routes","path","component","Day1","Day2","Day3","Day4","Day5","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","state","undefined","icon","main","celcius","temp_max","temp_min","description","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB;AAEA,MAAMC,OAAO,GAAG,kCAAhB;AAGA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEC;AAFb,CADa,EAKb;AACEF,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEE;AAFb,CALa,EASb;AACEH,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEG;AAFb,CATa,EAab;AACEJ,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEI;AAFb,CAba,EAiBb;AACEL,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEK;AAFb,CAjBa,CAAf;;AAyBA,MAAMC,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAiC;AAC/BC,EAAAA,WAAW,GAAE;AACX;;AADW,SAgBbC,UAhBa,GAgBA,YAAU;AAErB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,6EAC2Cd,OAD3C,EAA5B;AAIA,YAAMe,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAACL,QAAQ,CAACK,IAAT,CAAcC,IADP;AAEZC,QAAAA,OAAO,EAACP,QAAQ,CAACK,IAAT,CAAcE;AAFV,OAAd;AAKD,KA/BY;;AAEX,SAAKC,KAAL,GAAW;AACTH,MAAAA,IAAI,EAACI,SADI;AAETF,MAAAA,OAAO,EAACE,SAFC;AAGTC,MAAAA,IAAI,EAACD,SAHI;AAITE,MAAAA,IAAI,EAACF,SAJI;AAKTG,MAAAA,OAAO,EAACH,SALC;AAMTI,MAAAA,QAAQ,EAACJ,SANA;AAOTK,MAAAA,QAAQ,EAACL,SAPA;AAQTM,MAAAA,WAAW,EAAC,EARH;AASTC,MAAAA,KAAK,EAAC;AATG,KAAX;AAWA,SAAKnB,UAAL;AACD;;AAmBDoB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWH,IAA1B;AACA,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWD,OADpB;AAEA,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWI,OAFxB;AAGA,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAHrB;AAIA,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QAJrB;AAKA,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,WALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF;AAYD;;AA/C8B;;AAkDjC,eAAerB,GAAf","sourcesContent":["import React from 'react';\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Weather from \"./app_component/weather.component\";\n\nconst API_key = \"ab04fa8d5a7790709fea1bac8075ba7f\";\n\n\nconst routes = [\n  {\n    path: \"/Day1\",\n    component: Day1\n  },\n  {\n    path: \"/Day2\",\n    component: Day2,\n  },\n  {\n    path: \"/Day3\",\n    component: Day3,\n  },\n  {\n    path: \"/Day4\",\n    component: Day4,\n  },\n  {\n    path: \"/Day5\",\n    component: Day5,\n  }\n];\n\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      city:undefined,\n      country:undefined,\n      icon:undefined,\n      main:undefined,\n      celcius:undefined,\n      temp_max:undefined,\n      temp_min:undefined,\n      description:\"\",\n      error:false\n    };\n    this.getWeather();\n  }\n\n  getWeather = async() =>{\n\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/forecast?q=London,us&appid=${API_key}`\n    );\n\n    const response = await api_call.json();\n\n    console.log(response);\n\n    this.setState({\n      city:response.city.name,\n      country:response.city.country\n      \n    })\n  };\n\n  render(){\n    return(\n      <div className=\"App\">\n      <Weather city={this.state.city} \n      country={this.state.country} \n      temp_celius={this.state.celcius}\n      temp_max={this.state.temp_max}\n      temp_min={this.state.temp_min}\n      description={this.state.description}\n      \n      />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}